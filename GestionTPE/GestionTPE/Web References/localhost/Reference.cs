//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GestionTPE.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="http_IOnlineServerService", Namespace="http://tempuri.org/")]
    public partial class OnlineServerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetLoyaltyPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoyaltyBarCodeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback BurnLoyaltyBarCodeBarreOperationCompleted;
        
        private System.Threading.SendOrPostCallback FreeLoyaltyBarCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPendingOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AckCardParameterAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AckCardParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AckDownloadingCreditsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitConnOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlackListCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownloadingCreditsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsManCodeValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanCancelTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDumpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OnlineServerService() {
            this.Url = global::GestionTPE.Properties.Settings.Default.GestionTPE_localhost_OnlineServerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetLoyaltyPointsCompletedEventHandler GetLoyaltyPointsCompleted;
        
        /// <remarks/>
        public event GetLoyaltyBarCodeStatusCompletedEventHandler GetLoyaltyBarCodeStatusCompleted;
        
        /// <remarks/>
        public event BurnLoyaltyBarCodeBarreCompletedEventHandler BurnLoyaltyBarCodeBarreCompleted;
        
        /// <remarks/>
        public event FreeLoyaltyBarCodeCompletedEventHandler FreeLoyaltyBarCodeCompleted;
        
        /// <remarks/>
        public event HasPendingOperationCompletedEventHandler HasPendingOperationCompleted;
        
        /// <remarks/>
        public event GetCardParameterCompletedEventHandler GetCardParameterCompleted;
        
        /// <remarks/>
        public event AckCardParameterAppliedCompletedEventHandler AckCardParameterAppliedCompleted;
        
        /// <remarks/>
        public event AckCardParameterCompletedEventHandler AckCardParameterCompleted;
        
        /// <remarks/>
        public event AckDownloadingCreditsCompletedEventHandler AckDownloadingCreditsCompleted;
        
        /// <remarks/>
        public event InitConnCompletedEventHandler InitConnCompleted;
        
        /// <remarks/>
        public event DisconnectCompletedEventHandler DisconnectCompleted;
        
        /// <remarks/>
        public event GetBlackListCodeCompletedEventHandler GetBlackListCodeCompleted;
        
        /// <remarks/>
        public event GetDownloadingCreditsCompletedEventHandler GetDownloadingCreditsCompleted;
        
        /// <remarks/>
        public event IsManCodeValidCompletedEventHandler IsManCodeValidCompleted;
        
        /// <remarks/>
        public event CanTransferCompletedEventHandler CanTransferCompleted;
        
        /// <remarks/>
        public event TransferCompletedEventHandler TransferCompleted;
        
        /// <remarks/>
        public event CanCancelTransferCompletedEventHandler CanCancelTransferCompleted;
        
        /// <remarks/>
        public event SendDumpCompletedEventHandler SendDumpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/GetLoyaltyPoints", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetLoyaltyPoints(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardLoyId) {
            object[] results = this.Invoke("GetLoyaltyPoints", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardLoyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoyaltyPointsAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardLoyId) {
            this.GetLoyaltyPointsAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCardLoyId, null);
        }
        
        /// <remarks/>
        public void GetLoyaltyPointsAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardLoyId, object userState) {
            if ((this.GetLoyaltyPointsOperationCompleted == null)) {
                this.GetLoyaltyPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoyaltyPointsOperationCompleted);
            }
            this.InvokeAsync("GetLoyaltyPoints", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardLoyId}, this.GetLoyaltyPointsOperationCompleted, userState);
        }
        
        private void OnGetLoyaltyPointsOperationCompleted(object arg) {
            if ((this.GetLoyaltyPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoyaltyPointsCompleted(this, new GetLoyaltyPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/GetLoyaltyBarCodeStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetLoyaltyBarCodeStatus(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pIdProduct, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pBarCodeId) {
            object[] results = this.Invoke("GetLoyaltyBarCodeStatus", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pIdProduct,
                        pBarCodeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoyaltyBarCodeStatusAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pIdProduct, string pBarCodeId) {
            this.GetLoyaltyBarCodeStatusAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pIdProduct, pBarCodeId, null);
        }
        
        /// <remarks/>
        public void GetLoyaltyBarCodeStatusAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pIdProduct, string pBarCodeId, object userState) {
            if ((this.GetLoyaltyBarCodeStatusOperationCompleted == null)) {
                this.GetLoyaltyBarCodeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoyaltyBarCodeStatusOperationCompleted);
            }
            this.InvokeAsync("GetLoyaltyBarCodeStatus", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pIdProduct,
                        pBarCodeId}, this.GetLoyaltyBarCodeStatusOperationCompleted, userState);
        }
        
        private void OnGetLoyaltyBarCodeStatusOperationCompleted(object arg) {
            if ((this.GetLoyaltyBarCodeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoyaltyBarCodeStatusCompleted(this, new GetLoyaltyBarCodeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/BurnLoyaltyBarCodeBarre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BurnLoyaltyBarCodeBarre(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pBarCodeId) {
            object[] results = this.Invoke("BurnLoyaltyBarCodeBarre", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pBarCodeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BurnLoyaltyBarCodeBarreAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pBarCodeId) {
            this.BurnLoyaltyBarCodeBarreAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pBarCodeId, null);
        }
        
        /// <remarks/>
        public void BurnLoyaltyBarCodeBarreAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pBarCodeId, object userState) {
            if ((this.BurnLoyaltyBarCodeBarreOperationCompleted == null)) {
                this.BurnLoyaltyBarCodeBarreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBurnLoyaltyBarCodeBarreOperationCompleted);
            }
            this.InvokeAsync("BurnLoyaltyBarCodeBarre", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pBarCodeId}, this.BurnLoyaltyBarCodeBarreOperationCompleted, userState);
        }
        
        private void OnBurnLoyaltyBarCodeBarreOperationCompleted(object arg) {
            if ((this.BurnLoyaltyBarCodeBarreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BurnLoyaltyBarCodeBarreCompleted(this, new BurnLoyaltyBarCodeBarreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/FreeLoyaltyBarCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FreeLoyaltyBarCode(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pBarCodeId) {
            object[] results = this.Invoke("FreeLoyaltyBarCode", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pBarCodeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FreeLoyaltyBarCodeAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pBarCodeId) {
            this.FreeLoyaltyBarCodeAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pBarCodeId, null);
        }
        
        /// <remarks/>
        public void FreeLoyaltyBarCodeAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pBarCodeId, object userState) {
            if ((this.FreeLoyaltyBarCodeOperationCompleted == null)) {
                this.FreeLoyaltyBarCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFreeLoyaltyBarCodeOperationCompleted);
            }
            this.InvokeAsync("FreeLoyaltyBarCode", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pBarCodeId}, this.FreeLoyaltyBarCodeOperationCompleted, userState);
        }
        
        private void OnFreeLoyaltyBarCodeOperationCompleted(object arg) {
            if ((this.FreeLoyaltyBarCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FreeLoyaltyBarCodeCompleted(this, new FreeLoyaltyBarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/HasPendingOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HasPendingOperation(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardNum) {
            object[] results = this.Invoke("HasPendingOperation", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HasPendingOperationAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum) {
            this.HasPendingOperationAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCardNum, null);
        }
        
        /// <remarks/>
        public void HasPendingOperationAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, object userState) {
            if ((this.HasPendingOperationOperationCompleted == null)) {
                this.HasPendingOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPendingOperationOperationCompleted);
            }
            this.InvokeAsync("HasPendingOperation", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum}, this.HasPendingOperationOperationCompleted, userState);
        }
        
        private void OnHasPendingOperationOperationCompleted(object arg) {
            if ((this.HasPendingOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPendingOperationCompleted(this, new HasPendingOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/GetCardParameter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetCardParameter(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardNum) {
            object[] results = this.Invoke("GetCardParameter", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardParameterAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum) {
            this.GetCardParameterAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCardNum, null);
        }
        
        /// <remarks/>
        public void GetCardParameterAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, object userState) {
            if ((this.GetCardParameterOperationCompleted == null)) {
                this.GetCardParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardParameterOperationCompleted);
            }
            this.InvokeAsync("GetCardParameter", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum}, this.GetCardParameterOperationCompleted, userState);
        }
        
        private void OnGetCardParameterOperationCompleted(object arg) {
            if ((this.GetCardParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardParameterCompleted(this, new GetCardParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/AckCardParameterApplied", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AckCardParameterApplied(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pParameterId) {
            object[] results = this.Invoke("AckCardParameterApplied", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum,
                        pParameterId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AckCardParameterAppliedAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, string pParameterId) {
            this.AckCardParameterAppliedAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCardNum, pParameterId, null);
        }
        
        /// <remarks/>
        public void AckCardParameterAppliedAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, string pParameterId, object userState) {
            if ((this.AckCardParameterAppliedOperationCompleted == null)) {
                this.AckCardParameterAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAckCardParameterAppliedOperationCompleted);
            }
            this.InvokeAsync("AckCardParameterApplied", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum,
                        pParameterId}, this.AckCardParameterAppliedOperationCompleted, userState);
        }
        
        private void OnAckCardParameterAppliedOperationCompleted(object arg) {
            if ((this.AckCardParameterAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AckCardParameterAppliedCompleted(this, new AckCardParameterAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/AckCardParameter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AckCardParameter(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pParameterId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pStatus) {
            object[] results = this.Invoke("AckCardParameter", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum,
                        pParameterId,
                        pStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AckCardParameterAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, string pParameterId, string pStatus) {
            this.AckCardParameterAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCardNum, pParameterId, pStatus, null);
        }
        
        /// <remarks/>
        public void AckCardParameterAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, string pParameterId, string pStatus, object userState) {
            if ((this.AckCardParameterOperationCompleted == null)) {
                this.AckCardParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAckCardParameterOperationCompleted);
            }
            this.InvokeAsync("AckCardParameter", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum,
                        pParameterId,
                        pStatus}, this.AckCardParameterOperationCompleted, userState);
        }
        
        private void OnAckCardParameterOperationCompleted(object arg) {
            if ((this.AckCardParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AckCardParameterCompleted(this, new AckCardParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/AckDownloadingCredits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AckDownloadingCredits(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pLstOrder) {
            this.Invoke("AckDownloadingCredits", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum,
                        pLstOrder});
        }
        
        /// <remarks/>
        public void AckDownloadingCreditsAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, string pLstOrder) {
            this.AckDownloadingCreditsAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCardNum, pLstOrder, null);
        }
        
        /// <remarks/>
        public void AckDownloadingCreditsAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, string pLstOrder, object userState) {
            if ((this.AckDownloadingCreditsOperationCompleted == null)) {
                this.AckDownloadingCreditsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAckDownloadingCreditsOperationCompleted);
            }
            this.InvokeAsync("AckDownloadingCredits", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum,
                        pLstOrder}, this.AckDownloadingCreditsOperationCompleted, userState);
        }
        
        private void OnAckDownloadingCreditsOperationCompleted(object arg) {
            if ((this.AckDownloadingCreditsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AckDownloadingCreditsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/InitConn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InitConn(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out System.Nullable<uint> InitConnResult, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InitConnResultSpecified) {
            object[] results = this.Invoke("InitConn", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified});
            InitConnResult = ((System.Nullable<uint>)(results[0]));
            InitConnResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InitConnAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified) {
            this.InitConnAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, null);
        }
        
        /// <remarks/>
        public void InitConnAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, object userState) {
            if ((this.InitConnOperationCompleted == null)) {
                this.InitConnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitConnOperationCompleted);
            }
            this.InvokeAsync("InitConn", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified}, this.InitConnOperationCompleted, userState);
        }
        
        private void OnInitConnOperationCompleted(object arg) {
            if ((this.InitConnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitConnCompleted(this, new InitConnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/Disconnect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Disconnect(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified) {
            this.Invoke("Disconnect", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified});
        }
        
        /// <remarks/>
        public void DisconnectAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified) {
            this.DisconnectAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, null);
        }
        
        /// <remarks/>
        public void DisconnectAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, object userState) {
            if ((this.DisconnectOperationCompleted == null)) {
                this.DisconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisconnectOperationCompleted);
            }
            this.InvokeAsync("Disconnect", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified}, this.DisconnectOperationCompleted, userState);
        }
        
        private void OnDisconnectOperationCompleted(object arg) {
            if ((this.DisconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/GetBlackListCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetBlackListCode(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardNum) {
            object[] results = this.Invoke("GetBlackListCode", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardType,
                        pCardNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlackListCodeAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardType, string pCardNum) {
            this.GetBlackListCodeAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCardType, pCardNum, null);
        }
        
        /// <remarks/>
        public void GetBlackListCodeAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardType, string pCardNum, object userState) {
            if ((this.GetBlackListCodeOperationCompleted == null)) {
                this.GetBlackListCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlackListCodeOperationCompleted);
            }
            this.InvokeAsync("GetBlackListCode", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardType,
                        pCardNum}, this.GetBlackListCodeOperationCompleted, userState);
        }
        
        private void OnGetBlackListCodeOperationCompleted(object arg) {
            if ((this.GetBlackListCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlackListCodeCompleted(this, new GetBlackListCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/GetDownloadingCredits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetDownloadingCredits(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCardNum) {
            object[] results = this.Invoke("GetDownloadingCredits", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDownloadingCreditsAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum) {
            this.GetDownloadingCreditsAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCardNum, null);
        }
        
        /// <remarks/>
        public void GetDownloadingCreditsAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCardNum, object userState) {
            if ((this.GetDownloadingCreditsOperationCompleted == null)) {
                this.GetDownloadingCreditsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownloadingCreditsOperationCompleted);
            }
            this.InvokeAsync("GetDownloadingCredits", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCardNum}, this.GetDownloadingCreditsOperationCompleted, userState);
        }
        
        private void OnGetDownloadingCreditsOperationCompleted(object arg) {
            if ((this.GetDownloadingCreditsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownloadingCreditsCompleted(this, new GetDownloadingCreditsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/IsManCodeValid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IsManCodeValid(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCustNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pManCode) {
            object[] results = this.Invoke("IsManCodeValid", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCustNum,
                        pManCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsManCodeValidAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCustNum, string pManCode) {
            this.IsManCodeValidAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pCustNum, pManCode, null);
        }
        
        /// <remarks/>
        public void IsManCodeValidAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pCustNum, string pManCode, object userState) {
            if ((this.IsManCodeValidOperationCompleted == null)) {
                this.IsManCodeValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsManCodeValidOperationCompleted);
            }
            this.InvokeAsync("IsManCodeValid", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pCustNum,
                        pManCode}, this.IsManCodeValidOperationCompleted, userState);
        }
        
        private void OnIsManCodeValidOperationCompleted(object arg) {
            if ((this.IsManCodeValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsManCodeValidCompleted(this, new IsManCodeValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/CanTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CanTransfer(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSourceCardNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDestCardNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAmount, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTransacNr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pManCode) {
            object[] results = this.Invoke("CanTransfer", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pSourceCardNum,
                        pDestCardNum,
                        pAmount,
                        pTransacNr,
                        pManCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CanTransferAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pSourceCardNum, string pDestCardNum, string pAmount, string pTransacNr, string pManCode) {
            this.CanTransferAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pSourceCardNum, pDestCardNum, pAmount, pTransacNr, pManCode, null);
        }
        
        /// <remarks/>
        public void CanTransferAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pSourceCardNum, string pDestCardNum, string pAmount, string pTransacNr, string pManCode, object userState) {
            if ((this.CanTransferOperationCompleted == null)) {
                this.CanTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanTransferOperationCompleted);
            }
            this.InvokeAsync("CanTransfer", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pSourceCardNum,
                        pDestCardNum,
                        pAmount,
                        pTransacNr,
                        pManCode}, this.CanTransferOperationCompleted, userState);
        }
        
        private void OnCanTransferOperationCompleted(object arg) {
            if ((this.CanTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanTransferCompleted(this, new CanTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/Transfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Transfer(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pIdPreOrder) {
            object[] results = this.Invoke("Transfer", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pIdPreOrder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pIdPreOrder) {
            this.TransferAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pIdPreOrder, null);
        }
        
        /// <remarks/>
        public void TransferAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pIdPreOrder, object userState) {
            if ((this.TransferOperationCompleted == null)) {
                this.TransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOperationCompleted);
            }
            this.InvokeAsync("Transfer", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pIdPreOrder}, this.TransferOperationCompleted, userState);
        }
        
        private void OnTransferOperationCompleted(object arg) {
            if ((this.TransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferCompleted(this, new TransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/CanCancelTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CanCancelTransfer(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTransacNr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTransacNrToCancel) {
            object[] results = this.Invoke("CanCancelTransfer", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pTransacNr,
                        pTransacNrToCancel});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CanCancelTransferAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pTransacNr, string pTransacNrToCancel) {
            this.CanCancelTransferAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pTransacNr, pTransacNrToCancel, null);
        }
        
        /// <remarks/>
        public void CanCancelTransferAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pTransacNr, string pTransacNrToCancel, object userState) {
            if ((this.CanCancelTransferOperationCompleted == null)) {
                this.CanCancelTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanCancelTransferOperationCompleted);
            }
            this.InvokeAsync("CanCancelTransfer", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pTransacNr,
                        pTransacNrToCancel}, this.CanCancelTransferOperationCompleted, userState);
        }
        
        private void OnCanCancelTransferOperationCompleted(object arg) {
            if ((this.CanCancelTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanCancelTransferCompleted(this, new CanCancelTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IOnlineServerService/SendDump", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SendDump(int pIdSite, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdSiteSpecified, int pIdTpe, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pIdTpeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pData) {
            object[] results = this.Invoke("SendDump", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDumpAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pData) {
            this.SendDumpAsync(pIdSite, pIdSiteSpecified, pIdTpe, pIdTpeSpecified, pData, null);
        }
        
        /// <remarks/>
        public void SendDumpAsync(int pIdSite, bool pIdSiteSpecified, int pIdTpe, bool pIdTpeSpecified, string pData, object userState) {
            if ((this.SendDumpOperationCompleted == null)) {
                this.SendDumpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDumpOperationCompleted);
            }
            this.InvokeAsync("SendDump", new object[] {
                        pIdSite,
                        pIdSiteSpecified,
                        pIdTpe,
                        pIdTpeSpecified,
                        pData}, this.SendDumpOperationCompleted, userState);
        }
        
        private void OnSendDumpOperationCompleted(object arg) {
            if ((this.SendDumpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDumpCompleted(this, new SendDumpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetLoyaltyPointsCompletedEventHandler(object sender, GetLoyaltyPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoyaltyPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoyaltyPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetLoyaltyBarCodeStatusCompletedEventHandler(object sender, GetLoyaltyBarCodeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoyaltyBarCodeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoyaltyBarCodeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void BurnLoyaltyBarCodeBarreCompletedEventHandler(object sender, BurnLoyaltyBarCodeBarreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BurnLoyaltyBarCodeBarreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BurnLoyaltyBarCodeBarreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void FreeLoyaltyBarCodeCompletedEventHandler(object sender, FreeLoyaltyBarCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FreeLoyaltyBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FreeLoyaltyBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void HasPendingOperationCompletedEventHandler(object sender, HasPendingOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPendingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPendingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetCardParameterCompletedEventHandler(object sender, GetCardParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AckCardParameterAppliedCompletedEventHandler(object sender, AckCardParameterAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AckCardParameterAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AckCardParameterAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AckCardParameterCompletedEventHandler(object sender, AckCardParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AckCardParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AckCardParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AckDownloadingCreditsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void InitConnCompletedEventHandler(object sender, InitConnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitConnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitConnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<uint> InitConnResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<uint>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool InitConnResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void DisconnectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetBlackListCodeCompletedEventHandler(object sender, GetBlackListCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlackListCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlackListCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetDownloadingCreditsCompletedEventHandler(object sender, GetDownloadingCreditsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownloadingCreditsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownloadingCreditsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void IsManCodeValidCompletedEventHandler(object sender, IsManCodeValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsManCodeValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsManCodeValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CanTransferCompletedEventHandler(object sender, CanTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void TransferCompletedEventHandler(object sender, TransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CanCancelTransferCompletedEventHandler(object sender, CanCancelTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanCancelTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanCancelTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void SendDumpCompletedEventHandler(object sender, SendDumpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDumpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDumpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591